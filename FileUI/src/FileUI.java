/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author anuj
 */

import javax.swing.*;
import java.io.*;
import java.sql.*;

public class FileUI extends javax.swing.JFrame {

    private static Connection conn = null;
    private static Statement stmt = null;
    private static ResultSet rs = null;

    
    public FileUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtStudent = new javax.swing.JTextField();
        txtStudCourses = new javax.swing.JTextField();
        txtCourseNames = new javax.swing.JTextField();
        txtExam = new javax.swing.JTextField();
        btnStudent = new javax.swing.JButton();
        btnStudCourses = new javax.swing.JButton();
        btnCourseNames = new javax.swing.JButton();
        btnExam = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel5.setText("Student File");

        jLabel6.setText("Student Courses File");

        jLabel7.setText("Course Names File");

        jLabel8.setText("Exam File");

        btnStudent.setText("Browse");
        btnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseStudentActionPerformed(evt);
            }
        });

        btnStudCourses.setText("Browse");
        btnStudCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudCourseActionPerformed(evt);
            }
        });

        btnCourseNames.setText("Browse");
        btnCourseNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCourseNamesActionPerformed(evt);
            }
        });

        btnExam.setText("Browse");
        btnExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExamActionPerformed(evt);
            }
        });

        jButton1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jButton1.setForeground(new java.awt.Color(50, 100, 52));
        jButton1.setText("Upload");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpload(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(76, 250, 100));
        jButton2.setText("Display Current Database");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayDB(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStudCourses, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(txtCourseNames)
                    .addComponent(txtExam)
                    .addComponent(txtStudent))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnCourseNames))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnExam))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnStudent)
                            .addComponent(btnStudCourses))))
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnStudent))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStudCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnStudCourses))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(btnCourseNames))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExam)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpload(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpload
        
        String csvStud = txtStudent.getText();
        BufferedReader br = null;
        String splitAccTo = ",", line = "";
            
        try
        {
            br = new BufferedReader(new FileReader(csvStud));
                
            while((line = br.readLine()) != null)
            {
                String str[] = line.split(splitAccTo);
                try
                {
                    FileUI.addToDatabaseStudents(str);
                }
                    
                catch(Exception e)
                {
                   JOptionPane.showMessageDialog(null, e.toString(), "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            JOptionPane.showMessageDialog(null, "Records added to database", "Students", JOptionPane.INFORMATION_MESSAGE);
        }
            
        catch(IOException ioe)
        {
            JOptionPane.showMessageDialog(null, ioe.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        String csvStudCourse = txtStudCourses.getText();
        br = null;
        line = "";
            
        try
        {
            br = new BufferedReader(new FileReader(csvStudCourse));
                
            while((line = br.readLine()) != null)
            {
                String str[] = line.split(splitAccTo);
                try
                {
                    FileUI.addToDatabaseStudCourses(str);
                }
                    
                catch(Exception e)
                {
                   JOptionPane.showMessageDialog(null, e.toString(), "Error1",JOptionPane.ERROR_MESSAGE);
                }
            }
            JOptionPane.showMessageDialog(null, "Records added to database", "Student Courses", JOptionPane.INFORMATION_MESSAGE);
        }
            
        catch(IOException ioe)
        {
            JOptionPane.showMessageDialog(null, ioe.toString(), "Error2", JOptionPane.ERROR_MESSAGE);
        }
        
        String csvCourseNames = txtCourseNames.getText();
        br = null;
        line = "";
            
        try
        {
            br = new BufferedReader(new FileReader(csvCourseNames));
                
            while((line = br.readLine()) != null)
            {
                String str[] = line.split(splitAccTo);
                try
                {
                    FileUI.addToDatabaseCourseNames(str);
                }
                    
                catch(Exception e)
                {
                   JOptionPane.showMessageDialog(null, e.toString(), "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            JOptionPane.showMessageDialog(null, "Records added to database", "Course Names", JOptionPane.INFORMATION_MESSAGE);
        }
            
        catch(IOException ioe)
        {
            JOptionPane.showMessageDialog(null, ioe.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        
        String csvExam = txtExam.getText();
        br = null;
        line = "";
            
        try
        {
            br = new BufferedReader(new FileReader(csvExam));
                
            while((line = br.readLine()) != null)
            {
                String str[] = line.split(splitAccTo);
                try
                {
                    FileUI.addToDatabaseExam(str);
                }
                    
                catch(Exception e)
                {
                   JOptionPane.showMessageDialog(null, e.toString(), "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
           JOptionPane.showMessageDialog(null, "Records added to database", "Exams", JOptionPane.INFORMATION_MESSAGE);
        }
            
        catch(IOException ioe)
        {
            JOptionPane.showMessageDialog(null, ioe.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_btnUpload

    public static void addToDatabaseStudents(String str[]) throws Exception
    {   
        
        try
        {              
            String sql = "INSERT INTO Students VALUES('" + str[0] + "', '" + str[1] + "', '" + str[2] + "', '" + str[3] + "', '" + str[4] + "', '" + str[5] + "', '" + str[6] + "')";
            stmt.executeUpdate(sql);            
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
 
    
    public static void addToDatabaseStudCourses(String str[]) throws Exception
    {       
        try
        {              
            String sql = "INSERT INTO StudentCourses VALUES('" + str[0] + "', '" + str[1] + "')";
            stmt.executeUpdate(sql);
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public static void addToDatabaseCourseNames(String str[]) throws Exception
    {       
        try
        {              
            String sql = "INSERT INTO CourseNames VALUES('" + str[0] + "', '" + str[1] + "')";
            stmt.executeUpdate(sql);
            
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public static void addToDatabaseExam(String str[]) throws Exception
    {       
        try
        {              
            String sql = "INSERT INTO Exams VALUES('" + str[0] + "', '" + str[1] + "', '" + str[2] + "')";
            stmt.executeUpdate(sql);
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }

    
    
    private void btnBrowseStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseStudentActionPerformed
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("choosertitle");
            
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
            {
                String str =  chooser.getSelectedFile().getAbsolutePath();
                txtStudent.setText( str );
            }
    }//GEN-LAST:event_btnBrowseStudentActionPerformed

    private void btnStudCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudCourseActionPerformed
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("choosertitle");
            
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
            {
                String str =  chooser.getSelectedFile().getAbsolutePath();
                txtStudCourses.setText( str );
            }

    }//GEN-LAST:event_btnStudCourseActionPerformed

    private void btnCourseNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCourseNamesActionPerformed
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("choosertitle");
            
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
            {
                String str =  chooser.getSelectedFile().getAbsolutePath();
                txtCourseNames.setText( str );
            }

    }//GEN-LAST:event_btnCourseNamesActionPerformed

    private void btnExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExamActionPerformed
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("choosertitle");
            
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
            {
                String str =  chooser.getSelectedFile().getAbsolutePath();
                txtExam.setText( str );
            }

    }//GEN-LAST:event_btnExamActionPerformed

    private void btnDisplayDB(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayDB

        /*try
        {
            String sql = "SELECT * FROM Students";
            rs = stmt.executeQuery(sql);
            
            System.out.println("STUDENTS TABLE");
            while(rs.next())
            {
                int id = rs.getInt("StudentID");
                String fn = rs.getString("FirstName");
                String mn = rs.getString("MiddleName");
                String ln = rs.getString("LastName");
                String dob = rs.getString("DOB");
                String addr = rs.getString("Address");
                String sex = rs.getString("Sex");
                System.out.println(id + " " + fn + " " + mn + " " + ln + " " + dob + " " + addr + " " + sex);
            }
            
            System.out.println("\nSTUDENT COURSES TABLE");
            
            sql = "SELECT * FROM StudentCourses";
            rs = stmt.executeQuery(sql);
            
            while(rs.next())
            {
                int id = rs.getInt("StudentID");
                String cc = rs.getString("CourseCode");
                System.out.println(id + " " + cc);
            }
            
            System.out.println("\nCOURSE NAMES TABLE");
            sql = "SELECT * FROM CourseNames";
            rs = stmt.executeQuery(sql);
                        
            while(rs.next())
            {
                String cc = rs.getString("CourseCode");
                String cn = rs.getString("CourseName");
                System.out.println(cc + " " + cn);
            }
            
            System.out.println("\nEXAMS TABLE");
            sql = "SELECT * FROM Exams";
            rs = stmt.executeQuery(sql);
            
            while(rs.next())
            {
                int id = rs.getInt("StudentID");
                String cc = rs.getString("CourseCode");
                int m = rs.getInt("Marks");
                System.out.println(id + " " + cc + " " + m);
            }                      
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        */
        
    }//GEN-LAST:event_btnDisplayDB

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        final String jdbcDriver = "com.mysql.jdbc.Driver";
        final String dbURL = "jdbc:mysql://localhost:3306/University";
    
        try
        {
            Class.forName(jdbcDriver);
            conn = DriverManager.getConnection(dbURL, "root", "anujk1998");
            stmt = conn.createStatement();
     
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        try
        {
            if(stmt != null)
                stmt.close();
            if(rs != null)
                rs.close();
            if(conn != null)
                conn.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
 
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCourseNames;
    private javax.swing.JButton btnExam;
    private javax.swing.JButton btnStudCourses;
    private javax.swing.JButton btnStudent;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtCourseNames;
    private javax.swing.JTextField txtExam;
    private javax.swing.JTextField txtStudCourses;
    private javax.swing.JTextField txtStudent;
    // End of variables declaration//GEN-END:variables
}
